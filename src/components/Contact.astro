---
import Section from "@/layouts/Section.astro";
---

<Section id="contact" title="Contact" contentSection={true}>
  <main>
    <form id="contactForm" class="flex flex-col gap-5">
      <div class="flex flex-col gap-5 sm:flex-row">
        <input
          class="rounded-lg bg-gray-100 px-3 py-2.5 outline-none focus:ring-[1px] focus:ring-gray-800 sm:w-1/2 dark:bg-gray-800 dark:text-gray-200 dark:focus:ring-gray-200"
          id="name"
          name="name"
          type="text"
          placeholder="Name..."
          autocomplete="name"
        />

        <input
          class="rounded-lg bg-gray-100 px-3 py-2.5 outline-none focus:ring-[1px] focus:ring-gray-800 sm:w-1/2 dark:bg-gray-800 dark:text-gray-200 dark:focus:ring-gray-200"
          id="email"
          name="email"
          type="text"
          placeholder="Email..."
          autocomplete="email"
        />
      </div>

      <textarea
        class="w-full resize-none rounded-lg bg-gray-100 px-3 py-2.5 outline-none focus:ring-[1px] focus:ring-gray-800 dark:bg-gray-800 dark:text-gray-200 dark:focus:ring-gray-200"
        id="message"
        name="message"
        placeholder="Message..."
        rows="8"></textarea>

      <ul class="hidden" id="list-of-errors">
        <li
          class="hidden list-inside list-disc text-red-600 dark:text-red-500"
          id="name-error"
        >
        </li>

        <li
          class="hidden list-inside list-disc text-red-600 dark:text-red-500"
          id="email-error"
        >
        </li>

        <li
          class="hidden list-inside list-disc text-red-600 dark:text-red-500"
          id="message-error"
        >
        </li>
      </ul>

      <button
        type="submit"
        class="rounded-3xl bg-gray-800 py-3 font-bold text-gray-200 transition-[filter] hover:brightness-125 dark:bg-gray-200 dark:text-gray-800 dark:hover:brightness-90"
      >
        Send
      </button>
    </form>
  </main>
</Section>

<script>
  import { actions, isInputError } from "astro:actions";

  const sendContactEmail = async (event: Event) => {
    event.preventDefault();

    const name = document.getElementById("name") as HTMLInputElement;
    const email = document.getElementById("email") as HTMLInputElement;
    const message = document.getElementById("message") as HTMLTextAreaElement;

    const listOfErrors = document.getElementById(
      "list-of-errors"
    ) as HTMLUListElement;

    const nameError = document.getElementById(
      "name-error"
    ) as HTMLParagraphElement;

    const emailError = document.getElementById(
      "email-error"
    ) as HTMLParagraphElement;

    const messageError = document.getElementById(
      "message-error"
    ) as HTMLParagraphElement;

    const form = event.target as HTMLFormElement;
    const formData = new FormData(form);

    const { data, error } = await actions.sendContactEmail(formData);

    if (data) {
      form.reset();
    }

    if (isInputError(error)) {
      listOfErrors.classList.remove("hidden");

      if (error.fields.name && error.fields.name.length > 0) {
        name.classList.remove("focus:ring-[1px]");
        name.classList.add(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        nameError.textContent = error.fields.name[0];
        nameError.classList.remove("hidden");
      } else {
        name.classList.add("focus:ring-[1px]");
        name.classList.remove(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        nameError.classList.add("hidden");
        nameError.textContent = "";
      }

      if (error.fields.email && error.fields.email.length > 0) {
        email.classList.remove("focus:ring-[1px]");
        email.classList.add(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        emailError.textContent = error.fields.email[0];
        emailError.classList.remove("hidden");
      } else {
        email.classList.add("focus:ring-[1px]");
        email.classList.remove(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        emailError.classList.add("hidden");
        emailError.textContent = "";
      }

      if (error.fields.message && error.fields.message.length > 0) {
        message.classList.remove("focus:ring-[1px]");
        message.classList.add(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        messageError.textContent = error.fields.message[0];
        messageError.classList.remove("hidden");
      } else {
        message.classList.add("focus:ring-[1px]");
        message.classList.remove(
          "border-[1px]",
          "border-red-500",
          "dark:border-red-600"
        );
        messageError.classList.add("hidden");
        messageError.textContent = "";
      }

      return;
    }

    listOfErrors.classList.add("hidden");

    name.classList.add("focus:ring-[1px]");
    name.classList.remove(
      "border-[1px]",
      "border-red-500",
      "dark:border-red-600"
    );

    email.classList.add("focus:ring-[1px]");
    email.classList.remove(
      "border-[1px]",
      "border-red-500",
      "dark:border-red-600"
    );

    message.classList.add("focus:ring-[1px]");
    message.classList.remove(
      "border-[1px]",
      "border-red-500",
      "dark:border-red-600"
    );
  };

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contactForm") as HTMLFormElement;
    form.addEventListener("submit", sendContactEmail);
  });
</script>
